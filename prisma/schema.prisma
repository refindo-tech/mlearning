// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Siswa {
  id                Int               @id @default(autoincrement())
  email             String            @unique @db.VarChar(120)
  password          String            @db.VarChar(120)
  created_at        DateTime          @default(now())
  updated_at        DateTime          @default(now())
  resetToken        String?           @db.Text
  expiredResetToken DateTime?
  ProfileSiswa      ProfileSiswa[]
  ProfileWali       ProfileWali[]
  Absensi           Absensi[]
  AuthExamSiswa     AuthExamSiswa[]
  ResultExamSiswa   ResultExamSiswa[]
}

model Guru {
  id                Int           @id @default(autoincrement())
  email             String        @unique @db.VarChar(120)
  password          String        @db.VarChar(120)
  resetToken        String?       @db.Text
  expiredResetToken DateTime?
  created_at        DateTime      @default(now())
  updated_at        DateTime      @default(now())
  ProfileGuru       ProfileGuru[]
}

model ProfileSiswa {
  id         Int      @id @default(autoincrement())
  idsiswa    Int
  nisn       String?  @db.VarChar(30)
  name       String   @db.VarChar(120)
  sekolah    String?  @db.VarChar(120)
  kelas      String?  @db.VarChar(10)
  ttl        String?  @db.VarChar(200)
  urlimage   String?  @db.Text
  gender     Gender?
  agama      String?  @db.VarChar(20)
  phone      String?
  anakke     Int?
  alamat     String?  @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  Siswa      Siswa    @relation(fields: [idsiswa], references: [id], onDelete: Cascade)
}

model ProfileWali {
  id         Int      @id @default(autoincrement())
  idsiswa    Int
  name       String   @db.VarChar(150)
  pekerjaan  String?  @db.VarChar(120)
  phone      String?
  alamat     String?  @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  Siswa      Siswa    @relation(fields: [idsiswa], references: [id], onDelete: Cascade)
}

model ProfileGuru {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(120)
  idguru     Int
  nuptk      String?
  start      String?  @db.Text
  ttl        String?  @db.Text
  urlimage   String?  @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  Guru       Guru     @relation(fields: [idguru], references: [id], onDelete: Cascade)
}

model MataPelajaran {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(120)
  kelas           String?           @db.VarChar(10)
  description     String?           @db.Text
  created_at      DateTime          @default(now())
  updated_at      DateTime          @default(now())
  Materi          Materi[]
  Absensi         Absensi[]
  Diskusi         Diskusi[]
  Exam            Exam[]
  AuthExamSiswa   AuthExamSiswa[]
  ResultExamSiswa ResultExamSiswa[]
}

model Absensi {
  id              Int           @id @default(autoincrement())
  idmatapelajaran Int
  idmateri        Int
  stasiun         String        @db.VarChar(10)
  idsiswa         Int
  name            String?       @db.VarChar(150)
  nisn            String?       @db.VarChar(30)
  kelas           String?       @db.VarChar(10)
  matapelajaran   String?       @db.VarChar(120)
  status          StatusAbsen   @default(BELUM)
  date            DateTime?
  MataPelajaran   MataPelajaran @relation(fields: [idmatapelajaran], references: [id], onDelete: Cascade)
  Siswa           Siswa         @relation(fields: [idsiswa], references: [id], onDelete: Cascade)
  Materi          Materi        @relation(fields: [idmateri], references: [id], onDelete: Cascade)
}

model Materi {
  id              Int           @id @default(autoincrement())
  idmatapelajaran Int
  stasiun         String        @db.VarChar(10)
  topic           String?       @db.VarChar(100)
  detailmateri    String        @db.LongText
  urlvideo        String?       @db.Text
  urlaudio        String?       @db.Text
  urlimage        String?       @db.Text
  created_at      DateTime      @default(now())
  updated_at      DateTime      @default(now())
  MataPelajaran   MataPelajaran @relation(fields: [idmatapelajaran], references: [id], onDelete: Cascade)
  Diskusi         Diskusi[]
  Exam            Exam?
  Absensi         Absensi[]
}

model Diskusi {
  id            Int           @id @default(autoincrement())
  idmapel       Int
  idmateri      Int
  // idguru        Int
  topic         String?       @db.Text
  question      String?       @db.Text
  urlvideo      String?       @db.Text
  urlaudio      String?       @db.Text
  urlimage      String?       @db.Text
  stasiun       String        @db.VarChar(10)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @default(now())
  MataPelajaran MataPelajaran @relation(fields: [idmapel], references: [id], onDelete: Cascade)
  Materi        Materi        @relation(fields: [idmateri], references: [id], onDelete: Cascade)
  // Guru          Guru          @relation(fields: [idguru], references: [id])
}

model Exam {
  id              Int               @id @default(autoincrement())
  // idguru        Int
  idmateri        Int               @unique
  idmapel         Int
  stasiun         String            @db.VarChar(10)
  topic           String?           @db.Text
  created_at      DateTime          @default(now())
  updated_at      DateTime          @default(now())
  ExamQuestion    ExamQuestion[]
  AuthExamSiswa   AuthExamSiswa[]
  ResultExamSiswa ResultExamSiswa[]
  Materi          Materi            @relation(fields: [idmateri], references: [id], onDelete: Cascade)
  // Guru          Guru            @relation(fields: [idguru], references: [id])
  MataPelajaran   MataPelajaran     @relation(fields: [idmapel], references: [id], onDelete: Cascade)
}

model ExamQuestion {
  id            Int      @id @default(autoincrement())
  idexam        Int
  text          String?  @db.Text
  urlvideo      String?  @db.Text
  urlimage      String?  @db.Text
  urlaudio      String?  @db.Text
  optionanswer  String?  @db.Text
  correctAnswer String?  @db.Text
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  Exam          Exam     @relation(fields: [idexam], references: [id], onDelete: Cascade)
}

model AuthExamSiswa {
  id            Int           @id @default(autoincrement())
  idmapel       Int
  idexam        Int
  idsiswa       Int
  stasiun       String        @db.VarChar(10)
  answer        String        @db.Text
  created_at    DateTime      @default(now())
  updated_at    DateTime      @default(now())
  Siswa         Siswa         @relation(fields: [idsiswa], references: [id], onDelete: Cascade)
  MataPelajaran MataPelajaran @relation(fields: [idmapel], references: [id], onDelete: Cascade)
  Exam          Exam          @relation(fields: [idexam], references: [id], onDelete: Cascade)
}

model ResultExamSiswa {
  id            Int           @id @default(autoincrement())
  idexam        Int
  idmapel       Int
  idsiswa       Int
  stasiun       String        @db.VarChar(10)
  nilai         Int
  created_at    DateTime      @default(now())
  updated_at    DateTime      @default(now())
  MataPelajaran MataPelajaran @relation(fields: [idmapel], references: [id], onDelete: Cascade)
  Siswa         Siswa         @relation(fields: [idsiswa], references: [id], onDelete: Cascade)
  Exam          Exam          @relation(fields: [idexam], references: [id], onDelete: Cascade)
}

model News {
  id         Int      @id @default(autoincrement())
  text       String   @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

enum Gender {
  Pria
  Perempuan
}

enum StatusAbsen {
  BELUM
  SUDAH
}
